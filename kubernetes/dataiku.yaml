apiVersion: v1
kind: Namespace
metadata:
  name: dataiku

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dataiku-pvc
  namespace: dataiku
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: temp-pvc
  namespace: dataiku
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dataiku-deployment
  namespace: dataiku
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dataiku
  template:
    metadata:
      labels:
        app: dataiku
    spec:
      initContainers: # Init container to ensure permissions
      - name: init-permissions
        image: busybox
        command: ["sh", "-c", "chown -R 1000:1000 /home/dataiku/dss && chmod -R 777 /tmp/ && rm -rf /tmp/*"]
        volumeMounts:
        - name: dataiku-storage
          mountPath: /home/dataiku/dss
        - mountPath: "/tmp"
          name: temp-storage
      containers:
      - name: dataiku
        image: rhanka/dataiku:latest
        ports:
        - containerPort: 10000
        env:
        - name: DIP_HOME
          value: "/home/dataiku/dss"
        - name: DKU_BACKEND_EXT_HOST
          value: "dataiku-internal.dataiku.svc.cluster.local"
        volumeMounts:
        - mountPath: "/home/dataiku/dss"
          name: dataiku-storage
        - mountPath: "/tmp"
          name: temp-storage
        - mountPath: "/home/dataiku/.kube/config"
          name: kubeconfig-volume
          subPath: config
        - mountPath: /var/run/
          name: docker-sock # Docker socket mount for interaction with dind sidecar
        securityContext:
          runAsGroup: 2375       # GID du groupe Docker (socket owner group)
      - name: dind
        image: docker:dind
        securityContext:
          privileged: true
        env:
        - name: DOCKER_TLS_CERTDIR
          value: ""
        volumeMounts:
        - mountPath: /var/run
          name: docker-sock
      volumes:
      - name: dataiku-storage
        persistentVolumeClaim:
          claimName: dataiku-pvc
      - name: temp-storage
        persistentVolumeClaim:
          claimName: temp-pvc
      - name: kubeconfig-volume
        secret:
          secretName: kubeconfig-secret
          # supposing you've created the kubectl secret with the following command:
          # kubectl create secret generic kubeconfig-secret --from-file=config -n dataiku
      - name: docker-sock
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: dataiku-service
  namespace: dataiku
spec:
  selector:
    app: dataiku
  ports:
    - protocol: TCP
      port: 80
      targetPort: 10000
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: dataiku-internal
  namespace: dataiku
spec:
  selector:
    app: dataiku
  ports:
    - protocol: TCP
      port: 10001
      targetPort: 10001
      name: backend-1
    - protocol: TCP
      port: 37453
      targetPort: 37453
      name: backend-2
    - protocol: TCP
      port: 43851
      targetPort: 43851
      name: backend-3
  type: ClusterIP
