name: Build and Publish Docker Image

on:
  push:
    branches:
      - master

env:
  DSS_VERSION: 13.4.0

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Check if Docker image exists
      id: image-check
      run: |
        if docker pull ${{ secrets.DOCKER_USERNAME }}/dataiku:${{ env.DSS_VERSION }}; then
          echo "Image exists"
          echo "::set-output name=image_exists::true"
        else
          echo "Image does not exist"
          echo "::set-output name=image_exists::false"
        fi

    - name: Build and push Docker image
      if: steps.image-check.outputs.image_exists == 'false'
      uses: docker/build-push-action@v4
      with:
        context: dss-docker
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/dataiku:${{ env.DSS_VERSION }}
          ${{ secrets.DOCKER_USERNAME }}/dataiku:latest
        build-args: |
          dssVersion=${{ env.DSS_VERSION }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

    - name: Post cache Docker layers
      if: always()
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}